{"version":3,"sources":["components/checkout-item/checkout-item.styles.js","components/checkout-item/checkout-item.component.js","components/stripe-button/stripe-button.component.js","pages/checkout/checkout.styles.js","pages/checkout/checkout.component.js"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","description","amount","panelLabel","token","axios","url","method","data","then","response","console","log","alert","catch","error","JSON","parse","stripeKey","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","StripeCheckoutButtonContainer","TestWarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id"],"mappings":"4MAEaA,EAAwBC,IAAOC,IAAV,4LAWrBC,EAAiBF,IAAOC,IAAV,wHASdE,EAAgBH,IAAOI,KAAV,2CAGbC,EAAoBL,YAAOG,EAAPH,CAAH,wHASjBM,EAAwBN,IAAOC,IAAV,uE,OCUnBM,cAAQ,MALI,SAACC,GAAD,MAAe,CACxCC,UAAW,SAACC,GAAD,OAAUF,EAASG,YAAkBD,KAChDE,QAAS,SAACF,GAAD,OAAUF,EAASI,YAAQF,KACpCG,WAAY,SAACH,GAAD,OAAUF,EAASK,YAAWH,QAE7BH,EA7BM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWI,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,QAC/CG,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACE,eAACnB,EAAD,WACE,cAACG,EAAD,UACE,qBAAKiB,IAAKH,EAAUI,IAAI,WAE1B,cAACjB,EAAD,UAAgBY,IAChB,eAACV,EAAD,WACE,qBAAKgB,QAAS,kBAAMR,EAAWC,IAA/B,SACE,8CAEF,+BAAOI,IACP,qBAAKG,QAAS,kBAAMT,EAAQE,IAA5B,SACE,iDAGJ,eAACX,EAAD,eAAiBc,KACjB,cAACX,EAAD,CAAuBe,QAAS,kBAAMZ,EAAUK,IAAhD,SACE,oD,mCCMOQ,EApCc,SAAC,GAAe,IAAbL,EAAY,EAAZA,MACxBM,EAAyB,IAARN,EAoBvB,OACE,cAAC,IAAD,CACEO,MAAM,UACNT,KAAK,qBACLU,gBAAc,EACdC,iBAAe,EACfC,YAAW,yBAAoBV,GAC/BW,OAAQL,EACRM,WAAW,UACXC,MA1BY,SAACA,GACfC,IAAM,CACJC,IAAK,WACLC,OAAQ,OACRC,KAAM,CAAEN,OAAQL,EAAgBO,WAE/BK,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZG,MAAM,yBAEPC,OAAM,SAACC,GACNJ,QAAQC,IAAI,kBAAmBI,KAAKC,MAAMF,IAC1CF,MACE,0FAcJK,UA5BF,iHCJSC,EAAwB7C,IAAOC,IAAV,gOAYrB6C,EAA0B9C,IAAOC,IAAV,2JAOvB8C,EAAuB/C,IAAOC,IAAV,mHAQpB+C,EAAiBhD,IAAOC,IAAV,gKAQdgD,EAAgCjD,YAAOsB,EAAPtB,CAAH,uEAK7BkD,EAAuBlD,IAAOC,IAAV,kLCQ3BkD,EAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,MAGMjD,sBAAQ4C,EAAR5C,EAxCM,SAAC,GAA0B,IAAxB8C,EAAuB,EAAvBA,UAAWE,EAAY,EAAZA,MACjC,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UACE,6CAEF,cAACA,EAAD,UACE,iDAEF,cAACA,EAAD,UACE,8CAEF,cAACA,EAAD,UACE,2CAEF,cAACA,EAAD,UACE,+CAGHM,EAAUI,KAAI,SAAC3C,GAAD,OACb,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAAS4C,OAE9B,cAACV,EAAD,UACE,4CAAeO,OAEjB,eAACL,EAAD,sEAEE,uBAFF,iDAKA,cAACD,EAAD,CAA+BhC,MAAOsC","file":"static/js/6.64ff82c1.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n`;\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n  span {\r\n    margin: 0px 10px;\r\n  }\r\n`;\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  clearItemFromCart,\r\n  addItem,\r\n  removeItem,\r\n} from '../../redux/cart/cart.actions';\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer,\r\n} from './checkout-item.styles';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, removeItem, addItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <img src={imageUrl} alt='item' />\r\n      </ImageContainer>\r\n      <TextContainer>{name}</TextContainer>\r\n      <QuantityContainer>\r\n        <div onClick={() => removeItem(cartItem)}>\r\n          <strong>&#10094;</strong>\r\n        </div>\r\n        <span>{quantity}</span>\r\n        <div onClick={() => addItem(cartItem)}>\r\n          <strong>&#10095;</strong>\r\n        </div>\r\n      </QuantityContainer>\r\n      <TextContainer>${price}</TextContainer>\r\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n        <strong>&#10005;</strong>\r\n      </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearItem: (item) => dispatch(clearItemFromCart(item)),\r\n  addItem: (item) => dispatch(addItem(item)),\r\n  removeItem: (item) => dispatch(removeItem(item)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey =\r\n    'pk_test_51I1XXVL2eToMSvzMMojSein8Li7TmAoq3QRxf5Smzo7WCMDaaAZd14SQpyOtH5TuPUhlwCBo3PTLbcmKL31XXr2600xymo7ypS';\r\n  const onToken = (token) => {\r\n    axios({\r\n      url: '/payment',\r\n      method: 'post',\r\n      data: { amount: priceForStripe, token },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        alert('Payment Successful');\r\n      })\r\n      .catch((error) => {\r\n        console.log('Payment error: ', JSON.parse(error));\r\n        alert(\r\n          'There was an issue with your payment. Please sure you use the provided creditcard.'\r\n        );\r\n      });\r\n  };\r\n  return (\r\n    <StripeCheckout\r\n      label='Pay Now'\r\n      name='CRWN CLothing Ltd.'\r\n      billingAddress\r\n      shippingAddress\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel='Pay Now'\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import styled from 'styled-components';\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: auto;\r\n  }\r\n`;\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n`;\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\nexport const StripeCheckoutButtonContainer = styled(StripeCheckoutButton)`\r\n  margin-left: auto;\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport const TestWarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from '../../redux/cart/cart.selectors';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  StripeCheckoutButtonContainer,\r\n  TestWarningContainer,\r\n} from './checkout.styles';\r\nconst CheckoutPage = ({ cartItems, total }) => {\r\n  return (\r\n    <CheckoutPageContainer>\r\n      <CheckoutHeaderContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Product</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Description</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Quantity</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Price</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Remove</span>\r\n        </HeaderBlockContainer>\r\n      </CheckoutHeaderContainer>\r\n      {cartItems.map((cartItem) => (\r\n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n      ))}\r\n      <TotalContainer>\r\n        <span>TOTAL: ${total}</span>\r\n      </TotalContainer>\r\n      <TestWarningContainer>\r\n        *Please use the following test credit card for payments*\r\n        <br />\r\n        4242 4242 4242 4242 - Exp: 01/21 - CVV: 123\r\n      </TestWarningContainer>\r\n      <StripeCheckoutButtonContainer price={total} />\r\n    </CheckoutPageContainer>\r\n  );\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"],"sourceRoot":""}