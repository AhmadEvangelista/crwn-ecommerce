{"version":3,"sources":["components/collection-preview/collection-preview.styles.js","components/collection-preview/collection-preview.component.js","components/collections-overview/collections-overview.styles.js","components/collections-overview/collections-overview.component.js","components/collections-overview/collections-overview.container.js","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.js","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.js"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","CollectionPreview","title","items","className","toUpperCase","filter","item","idx","map","id","CollectionOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionForPreview","connect","otherCollectionProps","mapDispatchToProps","isFetching","selectIsCollectionFetching","CollectionsOverviewContainer","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","key","selectCollection","collectionUrlParam","selectIsCollectionLoaded","WrappedComponent","isLoading","otherProps","CollectionItemContainer","ImageContainer","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","CustomButtonContainer","CustomButton","dispatch","addItem","name","price","inverted","onClick"],"mappings":"+NAEaA,EAA6BC,IAAOC,IAAV,4KAS1BC,EAAiBF,IAAOG,GAAV,wEAIdC,EAAmBJ,IAAOC,IAAV,gN,OCQdI,EAfW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAClC,OACE,eAACR,EAAD,CAA4BS,UAAU,qBAAtC,UACE,cAACN,EAAD,CAAgBM,UAAU,QAA1B,SAAmCF,EAAMG,gBACzC,cAACL,EAAD,CAAkBI,UAAU,UAA5B,SACGD,EACEG,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACF,GAAD,OACH,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKG,aCdzBC,EAA8Bf,IAAOC,IAAV,yECelCe,EAAkBC,YAAyB,CAC/CC,YAAaC,MAEAC,cAAQJ,EAARI,EAba,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,YAC7B,OACE,cAACH,EAAD,CAA6BP,UAAU,uBAAvC,SACGU,EAAYL,KAAI,YAAsC,IAAnCC,EAAkC,EAAlCA,GAAOO,EAA2B,sBACpD,OAAO,cAAC,EAAD,eAAgCA,GAARP,WCJjCQ,EAAqBL,YAAyB,CAClDM,WAAYC,MAGRC,EAA+BC,YACnCN,YAAQE,GACRK,IAFmCD,CAGnCE,GACaH,a,gCCff,oJAEMI,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAEvBC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKb,eAEJC,EAA6Bc,YACxC,CAACD,IACD,SAACd,GAAD,OACEA,EAAcgB,OAAOC,KAAKjB,GAAaL,KAAI,SAACuB,GAAD,OAASlB,EAAYkB,MAAQ,MAG/DC,EAAmB,SAACC,GAAD,OAC9BL,YAAe,CAACD,IAAoB,SAACd,GAAD,OAClCA,EAAcA,EAAYoB,GAAsB,SAGvCd,EAA6BS,YACxC,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKR,cAGJgB,EAA2BN,YACtC,CAACJ,IACD,SAACE,GAAD,QAAYA,EAAKb,gB,yECnBJS,IAJK,SAACa,GAAD,OAAsB,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,6BAC1E,OAAOD,EAAY,cAAC,IAAD,IAAc,cAACD,EAAD,eAAsBE,O,6FCD5CC,EAA0B3C,IAAOC,IAAV,wdA+BvB2C,EAAiB5C,IAAOC,IAAV,wKAML,gBAAG4C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4B9C,IAAOC,IAAV,oIAOzB8C,EAAgB/C,IAAOgD,KAAV,+JASbC,EAAiBjD,IAAOgD,KAAV,6GAOdE,EAAwBlD,YAAOmD,IAAPnD,CAAH,yP,OCpCnBoB,gBAAQ,MAHI,SAACgC,GAAD,MAAe,CACxCC,QAAS,SAAC1C,GAAD,OAAUyC,EAASC,YAAQ1C,QAEvBS,EAlBQ,SAAC,GAAuB,IAArBT,EAAoB,EAApBA,KAAM0C,EAAc,EAAdA,QACtBC,EAA0B3C,EAA1B2C,KAAMC,EAAoB5C,EAApB4C,MAAOV,EAAalC,EAAbkC,SACrB,OACE,eAACF,EAAD,WACE,cAACC,EAAD,CAAgBpC,UAAU,QAAQqC,SAAUA,IAC5C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBO,IAChB,eAACL,EAAD,eAAkBM,QAEpB,cAACL,EAAD,CAAuBM,UAAQ,EAACC,QAAS,kBAAMJ,EAAQ1C,IAAvD","file":"static/js/4.ee9454ca.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n`;\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer,\r\n} from './collection-preview.styles';\r\n\r\nconst CollectionPreview = ({ title, items }) => {\r\n  return (\r\n    <CollectionPreviewContainer className='collection-preview'>\r\n      <TitleContainer className='title'>{title.toUpperCase()}</TitleContainer>\r\n      <PreviewContainer className='preview'>\r\n        {items\r\n          .filter((item, idx) => idx < 4)\r\n          .map((item) => (\r\n            <CollectionItem key={item.id} item={item} />\r\n          ))}\r\n      </PreviewContainer>\r\n    </CollectionPreviewContainer>\r\n  );\r\n};\r\n\r\nexport default CollectionPreview;\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCollectionForPreview } from '../../redux/shop/shop.selectors';\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\nimport { CollectionOverviewContainer } from './collections-overview.styles';\r\n\r\nconst CollectionsOverview = ({ collections }) => {\r\n  return (\r\n    <CollectionOverviewContainer className='collections-overview'>\r\n      {collections.map(({ id, ...otherCollectionProps }) => {\r\n        return <CollectionPreview key={id} {...otherCollectionProps} />;\r\n      })}\r\n    </CollectionOverviewContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionForPreview,\r\n});\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.component';\r\n\r\nconst mapDispatchToProps = createStructuredSelector({\r\n  isFetching: selectIsCollectionFetching,\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapDispatchToProps),\r\n  WithSpinner\r\n)(CollectionsOverview);\r\nexport default CollectionsOverviewContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\nexport const selectCollectionForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections\r\n);\r\n","import React from 'react';\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 20vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const ImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 70%;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 20%;\r\n  }\r\n`;\r\nexport const CustomButtonContainer = styled(CustomButton)`\r\n  width: 70%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding 0 10px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\nimport {\r\n  CollectionItemContainer,\r\n  ImageContainer,\r\n  CollectionFooterContainer,\r\n  NameContainer,\r\n  PriceContainer,\r\n  CustomButtonContainer,\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n  return (\r\n    <CollectionItemContainer>\r\n      <ImageContainer className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>${price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <CustomButtonContainer inverted onClick={() => addItem(item)}>\r\n        Add to cart\r\n      </CustomButtonContainer>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n"],"sourceRoot":""}