{"version":3,"sources":["pages/collection/collection.styles.js","pages/collection/collection.component.js","pages/collection/collection.container.js","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.js","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.js"],"names":["CollectionPageContainer","styled","div","TitleContainer","h2","ItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","className","map","item","id","mapDispatchToProps","createStructuredSelector","isLoading","selectIsCollectionLoaded","CollectionsPageContainer","compose","WithSpinner","CollectionsPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionForPreview","Object","keys","key","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","ImageContainer","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","CustomButtonContainer","CustomButton","dispatch","addItem","name","price","inverted","onClick"],"mappings":"8MAEaA,EAA0BC,IAAOC,IAAV,oJAQvBC,EAAiBF,IAAOG,GAAV,wEAIdC,EAAiBJ,IAAOC,IAAV,oS,OCYZI,eAHS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAEpDD,EAhBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WAChBK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACE,eAACf,EAAD,CAAyBgB,UAAU,kBAAnC,UACE,cAACb,EAAD,CAAgBa,UAAU,QAA1B,SAAmCF,IACnC,cAACT,EAAD,CAAgBW,UAAU,QAA1B,SACGD,EAAME,KAAI,SAACC,GACV,OAAO,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKC,eCXrCC,EAAqBC,YAAyB,CAClDC,UAAW,SAACf,GAAD,OAAYgB,YAAyBhB,MAG5CiB,EAA2BC,YAC/BnB,YAAQc,GACRM,IAF+BD,CAG/BE,GACaH,a,gCCdf,oJAEMI,EAAa,SAACrB,GAAD,OAAWA,EAAMsB,MAEvBC,EAAoBC,YAC/B,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKG,eAEJC,EAA6BF,YACxC,CAACD,IACD,SAACE,GAAD,OACEA,EAAcE,OAAOC,KAAKH,GAAaf,KAAI,SAACmB,GAAD,OAASJ,EAAYI,MAAQ,MAG/D1B,EAAmB,SAAC2B,GAAD,OAC9BN,YAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYK,GAAsB,SAGvCC,EAA6BP,YACxC,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKU,cAGJhB,EAA2BQ,YACtC,CAACH,IACD,SAACC,GAAD,QAAYA,EAAKG,gB,yECnBJN,IAJK,SAACc,GAAD,OAAsB,YAAmC,IAAhClB,EAA+B,EAA/BA,UAAcmB,EAAiB,6BAC1E,OAAOnB,EAAY,cAAC,IAAD,IAAc,cAACkB,EAAD,eAAsBC,O,6FCD5CC,EAA0BzC,IAAOC,IAAV,wdA+BvByC,EAAiB1C,IAAOC,IAAV,wKAML,gBAAG0C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4B5C,IAAOC,IAAV,oIAOzB4C,EAAgB7C,IAAO8C,KAAV,+JASbC,EAAiB/C,IAAO8C,KAAV,6GAOdE,EAAwBhD,YAAOiD,IAAPjD,CAAH,yP,OCpCnBK,gBAAQ,MAHI,SAAC6C,GAAD,MAAe,CACxCC,QAAS,SAAClC,GAAD,OAAUiC,EAASC,YAAQlC,QAEvBZ,EAlBQ,SAAC,GAAuB,IAArBY,EAAoB,EAApBA,KAAMkC,EAAc,EAAdA,QACtBC,EAA0BnC,EAA1BmC,KAAMC,EAAoBpC,EAApBoC,MAAOV,EAAa1B,EAAb0B,SACrB,OACE,eAACF,EAAD,WACE,cAACC,EAAD,CAAgB3B,UAAU,QAAQ4B,SAAUA,IAC5C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBO,IAChB,eAACL,EAAD,eAAkBM,QAEpB,cAACL,EAAD,CAAuBM,UAAQ,EAACC,QAAS,kBAAMJ,EAAQlC,IAAvD","file":"static/js/5.49c48c42.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const TitleContainer = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\nexport const ItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n\r\n  & .collection-item {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\nimport {\r\n  CollectionPageContainer,\r\n  TitleContainer,\r\n  ItemsContainer,\r\n} from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer className='collection-page'>\r\n      <TitleContainer className='title'>{title}</TitleContainer>\r\n      <ItemsContainer className='items'>\r\n        {items.map((item) => {\r\n          return <CollectionItem key={item.id} item={item} />;\r\n        })}\r\n      </ItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\r\n});\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\nimport { selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionsPage from '../../pages/collection/collection.component';\r\nconst mapDispatchToProps = createStructuredSelector({\r\n  isLoading: (state) => !selectIsCollectionLoaded(state),\r\n});\r\n\r\nconst CollectionsPageContainer = compose(\r\n  connect(mapDispatchToProps),\r\n  WithSpinner\r\n)(CollectionsPage);\r\nexport default CollectionsPageContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\nexport const selectCollectionForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections\r\n);\r\n","import React from 'react';\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 20vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const ImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 70%;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 20%;\r\n  }\r\n`;\r\nexport const CustomButtonContainer = styled(CustomButton)`\r\n  width: 70%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding 0 10px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\nimport {\r\n  CollectionItemContainer,\r\n  ImageContainer,\r\n  CollectionFooterContainer,\r\n  NameContainer,\r\n  PriceContainer,\r\n  CustomButtonContainer,\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n  return (\r\n    <CollectionItemContainer>\r\n      <ImageContainer className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>${price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <CustomButtonContainer inverted onClick={() => addItem(item)}>\r\n        Add to cart\r\n      </CustomButtonContainer>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n"],"sourceRoot":""}