{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MhadAPE\\\\WebSiteProjects\\\\JavaScript\\\\React\\\\e-commerce\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, TitleContainer, ButtonContainer } from './sign-in.styles';\n\nconst SignIn = () => {\n  handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return {\n    render() {\n      const {\n        googleSignInStart\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(SignInContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n          children: \"I already have an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sign in with your email and password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"email\",\n            type: \"email\",\n            handleChange: this.handleChange,\n            value: this.state.email,\n            label: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"password\",\n            type: \"password\",\n            value: this.state.password,\n            handleChange: this.handleChange,\n            label: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n            children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n              type: \"submit\",\n              children: \" Sign in \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n              onClick: googleSignInStart,\n              isGoogleSignIn: true,\n              children: \"Sign in with Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n};\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/MhadAPE/WebSiteProjects/JavaScript/React/e-commerce/crwn-clothing/src/components/sign-in/sign-in.component.js"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","TitleContainer","ButtonContainer","SignIn","handleSubmit","event","preventDefault","props","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;AAIA,SACEC,eADF,EAEEC,cAFF,EAGEC,eAHF,QAIO,kBAJP;;AAMA,MAAMC,MAAM,GAAG,MAAM;AACnBC,EAAAA,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAuB,KAAKQ,KAAlC;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACAX,IAAAA,gBAAgB,CAACS,KAAD,EAAQC,QAAR,CAAhB;AACD,GALD;;AAOAE,EAAAA,YAAY,GAAIN,KAAD,IAAW;AACxB,UAAM;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBR,KAAK,CAACS,MAA9B;AACA,SAAKC,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQD;AAAV,KAAd;AACD,GAHD;;AAIA,SAAO;AACLI,IAAAA,MAAM,GAAG;AACP,YAAM;AAAElB,QAAAA;AAAF,UAAwB,KAAKS,KAAnC;AACA,0BACE,QAAC,eAAD;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAM,UAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,YAAY,EAAE,KAAKO,YAHrB;AAIE,YAAA,KAAK,EAAE,KAAKD,KAAL,CAAWF,KAJpB;AAKE,YAAA,KAAK,EAAC,OALR;AAME,YAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAE,KAAKE,KAAL,CAAWD,QAHpB;AAIE,YAAA,YAAY,EAAE,KAAKE,YAJrB;AAKE,YAAA,KAAK,EAAC,UALR;AAME,YAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE,QAAC,eAAD;AAAA,oCACE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,YAAD;AAAc,cAAA,OAAO,EAAEb,iBAAvB;AAA0C,cAAA,cAAc,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD;;AAlCI,GAAP;AAoCD,CAhDD;;KAAMK,M;;AAiDN,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,iBAAiB,EAAE,MAAMoB,QAAQ,CAACpB,iBAAiB,EAAlB,CADO;AAExCC,EAAAA,gBAAgB,EAAE,CAACS,KAAD,EAAQC,QAAR,KAChBS,QAAQ,CAACnB,gBAAgB,CAAC;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH8B,CAAf,CAA3B;;AAKA,eAAed,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCd,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from '../../redux/user/user.actions';\r\nimport {\r\n  SignInContainer,\r\n  TitleContainer,\r\n  ButtonContainer,\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = () => {\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { emailSignInStart } = this.props;\r\n    const { email, password } = this.state;\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  return {\r\n    render() {\r\n      const { googleSignInStart } = this.props;\r\n      return (\r\n        <SignInContainer>\r\n          <TitleContainer>I already have an account</TitleContainer>\r\n          <span>Sign in with your email and password</span>\r\n\r\n          <form onSubmit={this.handleSubmit}>\r\n            <FormInput\r\n              name='email'\r\n              type='email'\r\n              handleChange={this.handleChange}\r\n              value={this.state.email}\r\n              label='email'\r\n              required\r\n            />\r\n            <FormInput\r\n              name='password'\r\n              type='password'\r\n              value={this.state.password}\r\n              handleChange={this.handleChange}\r\n              label='password'\r\n              required\r\n            />\r\n            <ButtonContainer>\r\n              <CustomButton type='submit'> Sign in </CustomButton>\r\n              <CustomButton onClick={googleSignInStart} isGoogleSignIn>\r\n                Sign in with Google\r\n              </CustomButton>\r\n            </ButtonContainer>\r\n          </form>\r\n        </SignInContainer>\r\n      );\r\n    },\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}