{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n\n  const collectionsMap = () => {}; // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  // console.log('mounted');\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["C:/Users/MhadAPE/WebSiteProjects/JavaScript/React/e-commerce/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsStartAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;;AACA,QAAMC,cAAc,GAAG,MAAI,CAAE,CAA7B,CAJ4C,CAK5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,SAAS,CACbK,eAAe,CAACU,uBADH,EAEbT,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from '../../firebase/firebase.utils';\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure,\r\n} from './shop.actions';\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsStartAsync() {\r\n  yield console.log('I am fired');\r\n  const collectionRef = firestore.collection('collections');\r\n  const snapshot = yield collectionRef.get();\r\n  const collectionsMap = ()=>{}\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then((snapshot) => {\r\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\r\n  //   })\r\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  // console.log('mounted');\r\n}\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsStartAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}