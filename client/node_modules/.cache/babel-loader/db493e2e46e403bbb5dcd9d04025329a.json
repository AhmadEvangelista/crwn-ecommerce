{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MhadAPE\\\\WebSiteProjects\\\\JavaScript\\\\React\\\\e-commerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: !isCollectionLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/MhadAPE/WebSiteProjects/JavaScript/React/e-commerce/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Component","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionsOverviewContainer","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionsOverview","CollectionsPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,0BADF,EAEEC,wBAFF,QAGO,iCAHP;AAIA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACE,mBAAD,CAAlD;KAAMD,8B;AACN,MAAME,0BAA0B,GAAGH,WAAW,CAACD,cAAD,CAA9C;MAAMI,0B;;AAEN,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AAC/Bc,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AACAX,IAAAA,0BAA0B;AAC3B;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAEb;AAHb;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEU,KAAK,CAACG,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAGL,KAAD,iBACN,QAAC,0BAAD;AACE,UAAA,SAAS,EAAE,CAACI,kBADd;AAAA,aAEMJ;AAFN;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA3B8B;;AA6BjC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC/Ce,EAAAA,oBAAoB,EAAEb,0BADyB;AAE/Cc,EAAAA,kBAAkB,EAAEb;AAF2B,CAAD,CAAhD;;AAKA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\nimport {\r\n  selectIsCollectionFetching,\r\n  selectIsCollectionLoaded,\r\n} from '../../redux/shop/shop.selectors';\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends Component {\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isCollectionFetching, isCollectionLoaded } = this.props;\r\n\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionsPageWithSpinner\r\n              isLoading={!isCollectionLoaded}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: selectIsCollectionFetching,\r\n  isCollectionLoaded: selectIsCollectionLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}