{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I am fired');\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  console.log('mounted');\n}","map":{"version":3,"sources":["C:/Users/MhadAPE/WebSiteProjects/JavaScript/React/e-commerce/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsStartAsync","console","log","fetchCollectionsStart","FETCH_COLLECTIONS_START","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAML,SAAS,CACbC,eAAe,CAACK,uBADH,EAEbJ,0BAFa,CAAf;AAKA,QAAMK,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,EAAAA,aAAa,CACVG,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACD,GALH,EAMGI,KANH,CAMUC,KAAD,IAAWH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN5B;AAOAjB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsStartAsync() {\r\n  yield console.log('I am fired');\r\n}\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsStartAsync\r\n  );\r\n\r\n  const collectionRef = firestore.collection('collections');\r\n\r\n  collectionRef\r\n    .get()\r\n    .then((snapshot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    })\r\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  console.log('mounted');\r\n}\r\n"]},"metadata":{},"sourceType":"module"}