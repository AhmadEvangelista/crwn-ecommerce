{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nvar config = {\n  apiKey: 'AIzaSyDKLVZoDch_XHHf2q7-Aw7eIemyX3HWauM',\n  authDomain: 'crwn-clothing-db-68fe4.firebaseapp.com',\n  projectId: 'crwn-clothing-db-68fe4',\n  storageBucket: 'crwn-clothing-db-68fe4.appspot.com',\n  messagingSenderId: '42779811061',\n  appId: '1:42779811061:web:1217ea8917d54a6bb639bc',\n  measurementId: 'G-62PGKG9WK8'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionsSnapshot = await collectionRef.get();\n  console.log(collec);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error('error creating user ', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firestore;","map":{"version":3,"sources":["C:/Users/MhadAPE/WebSiteProjects/JavaScript/React/e-commerce/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionsSnapshot","console","log","collec","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,wCAFD;AAGXC,EAAAA,SAAS,EAAE,wBAHA;AAIXC,EAAAA,aAAa,EAAE,oCAJJ;AAKXC,EAAAA,iBAAiB,EAAE,aALR;AAMXC,EAAAA,KAAK,EAAE,0CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAb;AASA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,mBAAmB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;;AACA,MAAI,CAACL,QAAQ,CAACM,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBhB,QAA/B;AACA,UAAMiB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMhB,OAAO,CAACiB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGhB;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOmB,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACS,KAAR,CAAc,sBAAd,EAAsCA,KAAK,CAACC,OAA5C;AACD;AACF;;AACD,SAAOnB,OAAP;AACD,CAtBM;AAuBPZ,QAAQ,CAACgC,aAAT,CAAuB/B,MAAvB;AACA,OAAO,MAAMgC,IAAI,GAAGjC,QAAQ,CAACiC,IAAT,EAAb;AACP,OAAO,MAAMpB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AACP,MAAMqB,QAAQ,GAAG,IAAIlC,QAAQ,CAACiC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAerB,SAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nvar config = {\r\n  apiKey: 'AIzaSyDKLVZoDch_XHHf2q7-Aw7eIemyX3HWauM',\r\n  authDomain: 'crwn-clothing-db-68fe4.firebaseapp.com',\r\n  projectId: 'crwn-clothing-db-68fe4',\r\n  storageBucket: 'crwn-clothing-db-68fe4.appspot.com',\r\n  messagingSenderId: '42779811061',\r\n  appId: '1:42779811061:web:1217ea8917d54a6bb639bc',\r\n  measurementId: 'G-62PGKG9WK8',\r\n};\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const collectionRef = firestore.collection('users');\r\n  const snapShot = await userRef.get();\r\n  const collectionsSnapshot = await collectionRef.get();\r\n  console.log(collec)\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error('error creating user ', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport default firestore;\r\n"]},"metadata":{},"sourceType":"module"}